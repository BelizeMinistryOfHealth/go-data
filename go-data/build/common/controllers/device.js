"use strict";const app=require("../../server/server"),_=require("lodash");module.exports=function(t){app.utils.remote.disableRemoteMethods(t,["create","prototype.__create__history","prototype.__delete__history","prototype.__findById__history","prototype.__updateById__history","prototype.__destroyById__history"]),t.prototype.wipe=function(e,i){const s=this;s.history.create({},e).then(function(t){return s.sendWipeRequest().catch(function(i){return t.updateAttributes({status:app.models.deviceHistory.statusList.wipeFailed},e).then(function(){throw i})})}).then(function(){return s.updateAttributes({status:t.statusList.wipePending},e)}).then(function(){i()}).catch(i)},t.wipeComplete=function(e,i){const s=_.get(e,"remotingContext.req.authData.device");if(!s)return i(app.utils.apiError.getError("READ_DEVICE_INFORMATION_FAILURE"));s.history.find({where:{status:app.models.deviceHistory.statusList.wipePending},order:"updatedAt DESC"}).then(function(t){const i=[];return t.forEach(function(t,s){let r=app.models.deviceHistory.statusList.wipeFailed;s||(r=app.models.deviceHistory.statusList.wipeSuccess),i.push(t.updateAttributes({status:r},e))}),Promise.all(i)}).then(function(){return s.updateAttributes({status:t.statusList.wipeReady},e)}).then(function(){i()}).catch(i)},t.findByPhysicalDeviceId=((t,e)=>{app.models.device.findOne({where:{physicalDeviceId:t}}).then(function(t){e(null,t)}).catch(e)})};
"use strict";const app=require("../../server/server"),uuid=require("uuid"),moment=require("moment"),request=require("request"),packageJson=require("../../package"),config=require("../../server/config"),_=require("lodash"),path=require("path"),fork=require("child_process").fork;module.exports=function(e){app.utils.remote.disableRemoteMethods(e,["create","findById","deleteById","prototype.patchAttributes","count","find"]),e.getSystemSettings=function(t){e.findOne().then(function(e){if(!e)throw app.utils.apiError.getError("INTERNAL_ERROR",{error:"System settings are not initialized"});t(null,e)}).catch(t)},e.updateSystemSettings=function(t,r,o){e.findOne().then(function(e){if(e)return e.updateAttributes(t,r).then(function(e){o(null,e)});throw app.utils.apiError.getError("INTERNAL_ERROR",{error:"System settings are not initialized"})}).catch(o)},e.generateUniqueId=function(e){return e(null,{uuid:uuid.v4()})},e.createPdfFromImage=function(e,t,r,o,n){const i=fork(`${__dirname}../../../components/workers/createImageDoc`,[],{execArgv:[],windowsHide:!0}),a=function(){const t=new Error(`Processing failed. Worker stopped. Event Details: ${JSON.stringify(arguments)}`);return e.req.logger.error(JSON.stringify(t)),n(t)};["error","exit"].forEach(function(e){i.on(e,a)}),i.on("message",function(t){if(t[0])return n(t[0]);t[1]&&(t[1].chunk&&e.write(Buffer.from(t[1].chunk.data)),t[1].end&&(e.end(),["error","exit"].forEach(function(e){i.removeListener(e,a)}),i.kill()),t[1].done&&i.send({fn:"finish",args:[]}))}),e.set("Content-type","application/pdf"),e.set("Content-disposition",`attachment;filename=${uuid.v4()}.pdf`),i.send({fn:"createImageDocument",args:[{imageBase64:t,splitType:o,splitFactor:r}]})},e.getServerUTCDate=function(e){return e(null,{date:moment.utc()})},e.checkForUpdates=function(e){const t=`${config.updatesServer.protocol}://${config.updatesServer.host}:${config.updatesServer.port}/api/applications`;request({uri:`${t}/check-for-updates`,qs:{platform:packageJson.build.platform,version:packageJson.version},json:!0},function(r,o,n){if(r)return e(app.utils.apiError.getError("EXTERNAL_API_CONNECTION_ERROR",{serviceName:"Go.Data Version Manager",error:r}));if(200!==o.statusCode)return e(app.utils.apiError.getError("UNEXPECTED_EXTERNAL_API_RESPONSE",{serviceName:"Go.Data Version Manager",statusCode:o.statusCode,response:n}));let i={update:!1};n&&n.id&&(i={update:!0,name:n.name,description:n.description,version:n.version,platform:n.platform,download:`${t}/${n.id}/download`}),e(null,i)})},e.getVersion=function(e){e(null,Object.assign({},app.utils.helpers.getBuildInformation(),{tokenTTL:config.authToken&&config.authToken.ttl?config.authToken.ttl:app.models.user.settings.ttl,skipOldPasswordForUserModify:config.skipOldPasswordForUserModify,captcha:app.utils.helpers.getCaptchaConfig()}))},e.getBackupLocation=function(t){e.getCache().then(function(e){t(null,{install:app.ROOT_PATH,backUp:path.resolve(_.get(e,"dataBackup.location"))})}).catch(t)},e.generateFile=function(e,t,r){switch(e=e.toLowerCase()){case"json":app.utils.remote.helpers.offerFileToDownload(JSON.stringify(t),"application/json",`${uuid.v4()}.json`,r);break;case"qr":app.utils.remote.helpers.offerFileToDownload(app.utils.qrCode.encodeDataInQr(t),"image/png",`${uuid.v4()}.png`,r);break;default:r(app.utils.apiError.getError("REQUEST_VALIDATION_ERROR",{errorMessages:`Invalid File Type: ${e}. Supported options: json, qr`}))}}};
"use strict";const app=require("../../server/server");module.exports=function(e){app.utils.remote.disableRemoteMethods(e,["count","find"]),app.utils.remote.disableStandardRelationRemoteMethods(e,"principals"),e.beforeRemote("deleteById",function(e,t,r){app.models.user.find({where:{roleIds:e.args.id}}).then(function(t){t.length?r(app.utils.apiError.getError("MODEL_IN_USE",{model:"Role",id:e.args.id},422)):r()}).catch(r)}),e.beforeRemote("prototype.patchAttributes",function(e,t,r){if(-1!==e.req.authData.user.roleIds.indexOf(e.instance.id))return r(app.utils.apiError.getError("MODIFY_OWN_RECORD",{model:"Role",id:e.instance.id},403));r()}),e.getAvailablePermissions=function(t){t(null,e.availablePermissions)},e.getRoles=((e,t)=>{app.models.role.findAggregate(e).then(e=>t(null,e)).catch(t)}),e.countRoles=((e,t)=>{app.models.role.findAggregate({where:e},!0).then(e=>t(null,e)).catch(t)});const t=function(e,t,r){t&&t.id?app.models.user.find({where:{roleIds:{inq:[t.id]}}}).then(e=>{e&&(e.forEach(e=>{app.models.user.sanitize(e)}),t.users=e),r()}).catch(r):r()};e.afterRemote("findById",t),e.afterRemote("prototype.patchAttributes",t)};
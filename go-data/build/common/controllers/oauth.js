"use strict";const App=require("../../server/server"),Moment=require("moment");module.exports=function(e){e.createToken=function(e,t,r){const i=(e=e||{}).username,n=e.password;if(!i)return r(App.utils.apiError.getError("REQUEST_VALIDATION_ERROR",{errorMessages:"Missing required parameter: username"}));if(!n)return r(App.utils.apiError.getError("REQUEST_VALIDATION_ERROR",{errorMessages:"Missing required parameter: pasword"}));const o=App.models.user,s=App.settings.login;let a=null;o.findOne({where:{email:i}}).then(e=>{if(!e)throw App.utils.apiError.getError("LOGIN_FAILED");if(a=e,e.loginRetriesCount>=0&&e.lastLoginDate){const t=Moment(e.lastLoginDate),r=Moment(),i=t.add(s.resetTime,s.resetTimeUnit).isBefore(r),n=e.loginRetriesCount>=s.maxRetries;if(i)return e.updateAttributes({loginRetriesCount:0,lastLoginDate:null});if(n&&!i)throw App.utils.apiError.getError("ACTION_TEMPORARILY_BLOCKED")}}).then(()=>{o.login({email:i,password:n},(e,t)=>{if(e){const t=Moment().toDate(),i={};return a.loginRetriesCount>=0&&a.lastLoginDate?a.loginRetriesCount<s.maxRetries&&(i.loginRetriesCount=++a.loginRetriesCount,i.lastLoginDate=t):(i.loginRetriesCount=1,i.lastLoginDate=t),a.updateAttributes(i).then(()=>r(e)).catch(()=>r(e))}a.updateAttributes({loginRetriesCount:0,lastLoginDate:null}).then(()=>r(null,{token_type:"bearer",expires_in:t.ttl,access_token:t.id}))})}).catch(e=>r(e))}};
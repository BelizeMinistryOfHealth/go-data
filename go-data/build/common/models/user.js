"use strict";const app=require("../../server/server"),_=require("lodash"),path=require("path"),fs=require("fs"),bcrypt=require("bcrypt"),Async=require("async");module.exports=function(e){e.hasController=!0,e.helpers={},e.customRelations={roles:{type:"belongsToMany",model:"role",foreignKey:"roleIds"}},e.setter.password=function(e){"string"==typeof e&&(0!==e.indexOf("$2a$")&&0!==e.indexOf("$2b$")||60!==e.length?this.$password=this.constructor.hashPassword(e):this.$password=e)},e.helpers.validateSecurityQuestions=function(e,r){if(!e)return r();let t=app.utils.apiError.getError("INVALID_SECURITY_QUESTIONS");if(!e||e&&2!==e.length)return r(t);if(e[0].question.toLowerCase()===e[1].question.toLowerCase())return r(t);let s=!0;return e.forEach(e=>{e.answer&&(!e.answer||0!==e.answer.length&&e.answer.trim())||(s=!1)}),s?r():r(t)},e.helpers.validatePassword=function(e,r){return e&&e.length<12?r(app.utils.apiError.getError("INVALID_PASSWORD",{length:12})):r()},e.helpers.encryptSecurityQuestions=function(e){return e.map(e=>({question:e.question,answer:bcrypt.hashSync(e.answer.toLowerCase(),10)}))},e.helpers.collectErrorMessage=function(e,r){return e?r(null,e.message):r()},e.helpers.attachCustomProperties=function(e,r){return e.availablePermissions=app.models.role.availablePermissions,r()},e.on("resetPasswordRequest",function(e){app.models.language.getLanguageDictionary(e.user.languageId,function(r,t){if(r)return app.logger.error(`Failed to retrieve tokens for the following language: ${e.user.languageId}`),!1;let s=t.getTranslation("LNG_REFERENCE_DATA_CATEGORY_PASSWORD_RESET_HEADING"),n=t.getTranslation("LNG_REFERENCE_DATA_CATEGORY_PASSWORD_RESET_SUBJECT"),a=t.getTranslation("LNG_REFERENCE_DATA_CATEGORY_PASSWORD_RESET_PARAGRAPH1"),o=t.getTranslation("LNG_REFERENCE_DATA_CATEGORY_PASSWORD_RESET_PARAGRAPH2");const i=JSON.parse(fs.readFileSync(path.resolve(`${__dirname}/../../server/config.json`))),l=`${i.public.protocol}://${i.public.host}:${i.public.port}${i.passwordReset.path}`;o=_.template(o,{interpolate:/{{([\s\S]+?)}}/g})({resetHref:`${l}?token=${e.accessToken.id}`});let u=_.template(fs.readFileSync(path.resolve(`${__dirname}/../../server/views/passwordResetEmail.ejs`)))({heading:s,paragraph1:a,paragraph2:o});app.models.Email.send({to:e.email,from:i.passwordReset.from,subject:n,html:u})})}),e.migrate=function(e,r){const t=app.dataSources.mongoDb.connector;return t.connect(()=>{const e=["helpItem","labResult","databaseActionLog","followUp","user","accessToken","relationship","fileAttachment","helpCategory","deviceHistory","location","filterMapping","language","device","referenceData","team","outbreak","cluster","importMapping","auditLog","person","languageToken","systemSettings","template","backup","role","icon"],s=t.collection("user");return s.findOne({email:"admin@who.int",_id:{$ne:"sys_admin"}},(n,a)=>{if(n)return r(n);if(!a)return r();const o=[],i=function(e,r,s){return t.collection(e).updateMany({[r]:a._id},{$set:{[r]:"sys_admin"}},e=>s(e))};o.push(e=>Async.series([e=>s.deleteOne({_id:a._id},r=>e(r)),e=>s.insertOne(Object.assign({},a,{_id:"sys_admin",oldId:a._id}),r=>e(r))],r=>e(r)));for(let r of e)o.push(e=>Async.series([e=>i(r,"createdBy",e),e=>i(r,"updatedBy",e)],e));return o.push(e=>t.collection("team").updateMany({userIds:a._id},{$set:{"userIds.$":"sys_admin"}},r=>e(r))),Async.series(o,e=>r(e))})})},e.sanitize=function(e){delete e.password,delete e.settings,delete e.roleIds}};
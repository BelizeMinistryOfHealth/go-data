"use strict";const app=require("../../server/server"),_=require("lodash"),genericHelpers=require("../../components/helpers"),templateParser=require("./../../components/templateParser"),uuid=require("uuid"),AdmZip=require("adm-zip"),tmp=require("tmp"),async=require("async"),fs=require("fs"),moment=require("moment");module.exports=function(e){e.fieldLabelsMap=Object.assign({},e.fieldLabelsMap,{name:"LNG_OUTBREAK_FIELD_LABEL_NAME",description:"LNG_OUTBREAK_FIELD_LABEL_DESCRIPTION",disease:"LNG_OUTBREAK_FIELD_LABEL_DISEASE",countries:"LNG_OUTBREAK_FIELD_LABEL_COUNTRIES","countries[].id":"LNG_OUTBREAK_FIELD_LABEL_COUNTRY_ID",startDate:"LNG_OUTBREAK_FIELD_LABEL_START_DATE",endDate:"LNG_OUTBREAK_FIELD_LABEL_END_DATE",longPeriodsBetweenCaseOnset:"LNG_OUTBREAK_FIELD_LABEL_DAYS_LONG_PERIODS",periodOfFollowup:"LNG_OUTBREAK_FIELD_LABEL_DURATION_FOLLOWUP_DAYS",frequencyOfFollowUp:"LNG_OUTBREAK_FIELD_LABEL_FOLLOWUP_FRECQUENCY",frequencyOfFollowUpPerDay:"LNG_OUTBREAK_FIELD_LABEL_FOLLOWUP_FRECQUENCY_PER_DAY",noDaysAmongContacts:"LNG_OUTBREAK_FIELD_LABEL_DAYS_AMONG_KNOWN_CONTACTS",noDaysInChains:"LNG_OUTBREAK_FIELD_LABEL_DAYS_IN_KNOWN_TRANSMISSION_CHAINS",noDaysNotSeen:"LNG_OUTBREAK_FIELD_LABEL_DAYS_NOT_SEEN",noLessContacts:"LNG_OUTBREAK_FIELD_LABEL_LESS_THAN_X_CONTACTS",noDaysNewContacts:"LNG_OUTBREAK_FIELD_LABEL_DAYS_NEW_CONTACT","fieldsToDisplayNode[]":"LNG_OUTBREAK_FIELD_LABEL_FIELDS_TO_DISPLAY_NODE",caseInvestigationTemplate:"LNG_OUTBREAK_FIELD_LABEL_CASE_INVESTIGATION_TEMPLATE",contactFollowUpTemplate:"LNG_OUTBREAK_FIELD_LABEL_CONTACT_FOLLOWUP_TEMPLATE",labResultsTemplate:"LNG_OUTBREAK_FIELD_LABEL_LAB_RESULTS_TEMPLATE",caseIdMask:"LNG_OUTBREAK_FIELD_LABEL_CASE_ID_MASK",contactIdMask:"LNG_OUTBREAK_FIELD_LABEL_CONTACT_ID_MASK",arcGisServers:"LNG_OUTBREAK_FIELD_LABEL_ARC_GIS_SERVERS","arcGisServers[].name":"LNG_OUTBREAK_FIELD_LABEL_ARC_GIS_SERVER_NAME","arcGisServers[].url":"LNG_OUTBREAK_FIELD_LABEL_ARC_GIS_SERVER_URL"}),e.referenceDataFieldsToCategoryMap={disease:"LNG_REFERENCE_DATA_CATEGORY_DISEASE","countries[].id":"LNG_REFERENCE_DATA_CATEGORY_COUNTRY"},e.referenceDataFields=Object.keys(e.referenceDataFieldsToCategoryMap),e.customRelations={locations:{type:"belongsToMany",model:"location",foreignKey:"locationIds"}},e.helpers={},e.setMaxListeners(70),e.personReadPermissions=["case_all","case_list","case_view","contact_all","contact_list","contact_view","event_all","event_list","event_view"],e.noPersonReadPermissionFields=["id","type"],e.helpers.isNewGeneratedFollowup=function(e){return moment(e.createdAt).isSame(moment(e.updatedAt))&&e.isGenerated&&!e.performed&&!e.lostToFollowUp},e.helpers.findPersonRelationships=function(e,t,r){const s=app.utils.remote.mergeFilters({where:{"persons.id":e}},t);app.models.relationship.find(s).then(function(e){r(null,e)}).catch(r)},e.helpers.validateAndNormalizePeople=function(e,t,r,s,n,a){if(a||(a=n,n=void 0),Array.isArray(s.persons)&&s.persons.length){let o=[],i=[],l={id:s.persons[0].id};if(void 0===l.id?o.push('"persons[0]" must contain "id"'):l.id===t?o.push("You cannot link a person to itself"):i.push(l),o.length)return a(app.utils.apiError.getError("VALIDATION_ERROR",{model:app.models.relationship.modelName,details:o.join(", ")}));if(s.persons=i,!s.persons.length)return a(app.utils.apiError.getError("VALIDATION_ERROR",{model:app.models.relationship.modelName,details:"you must specify the related person"}));s.persons.length&&s.persons.push({id:t,type:r});let p=[];s.persons.forEach(function(t,a){t.type||p.push((n?app.models.person.find({where:{or:[{_id:t.id},{outbreakId:e,visualId:t.id}]}}):app.models.person.findById(t.id)).then(function(e){if(n&&e){if(e.length>1)throw app.utils.apiError.getError("MODEL_VISUAL_ID_MATCHES_MORE_THAN_2_RECORDS",{model:app.models.person.modelName,visualId:t.id});if(!(e=e.length>0?e[0]:null))throw app.utils.apiError.getError("PERSON_NOT_FOUND",{model:app.models.person.modelName,id:t.id});t.id=e.id}if(!e)throw app.utils.apiError.getError("MODEL_NOT_FOUND",{model:app.models.person.modelName,id:t.id});if("LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT"===r&&"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT"===e.type)throw app.utils.apiError.getError("INVALID_CONTACT_CONTACT_RELATIONSHIP",{id:t.id});if("LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE"===e.type&&app.models.case.discardedCaseClassifications.includes(e.classification))throw app.utils.apiError.getError("INVALID_RELATIONSHIP_WITH_DISCARDED_CASE",{id:e.id});s.persons[a].type=e.type,["LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_EVENT","LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE"].includes(s.persons[1].type)?(s.persons[0].target=!0,s.persons[1].source=!0):"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT"===s.persons[0].type?(s.persons[0].target=!0,s.persons[1].source=!0):(s.persons[0].source=!0,s.persons[1].target=!0)}))}),Promise.all(p).then(function(){a(null,s.persons)}).catch(a)}else a(null,s.persons)},e.helpers.createPersonRelationship=function(t,r,s,n,a,o){e.helpers.validateAndNormalizePeople(t,r,s,n,function(e){if(e)return o(e);app.models.relationship.removeReadOnlyProperties(n),app.models.relationship.create(Object.assign(n,{outbreakId:t}),a).then(function(e){o(null,e)}).catch(o)})},e.helpers.getPersonRelationship=function(e,t,r,s,n){const a=app.utils.remote.mergeFilters({where:{id:t,"persons.id":e}},s);app.models.relationship.findOne(a).then(function(s){if(!s)throw app.utils.apiError.getError("MODEL_NOT_FOUND_IN_CONTEXT",{model:app.models.relationship.modelName,id:t,contextModel:app.models[r].modelName,contextId:e});app.models.relationship.retrieveUserSupportedRelations({req:{options:{_userRelations:_.map(app.models.relationship.userSupportedRelations,e=>({relation:e}))}}},s,e=>{if(e)return n(e);n(null,s)})}).catch(n)},e.helpers.updatePersonRelationship=function(t,r,s,n,a,o){e.helpers.validateAndNormalizePeople(void 0,t,s,n,function(e){if(e)return o(e);app.models.relationship.findOne({where:{id:r,"persons.id":t}}).then(function(e){if(!e)throw app.utils.apiError.getError("MODEL_NOT_FOUND_IN_CONTEXT",{model:app.models.relationship.modelName,id:r,contextModel:app.models[app.models.person.typeToModelMap[s]].modelName,contextId:t});return app.models.relationship.removeReadOnlyProperties(n),e.updateAttributes(n,a)}).then(function(e){o(null,e)}).catch(o)})},e.helpers.deletePersonRelationship=function(e,t,r,s){let n;app.models.relationship.findOne({where:{id:t,"persons.id":e}}).then(function(e){if(!e)return{count:0};n=e;let r=e.persons.filter(e=>"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT"===e.type);if(r.length){let e=[];return r.forEach(function(r){e.push(app.models.relationship.count({id:{neq:t},"persons.id":r.id,"persons.type":{in:["LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE","LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_EVENT"]}}).then(function(e){return e?void 0:r.id}))}),Promise.all(e)}}).then(function(e){if(void 0===e)return n.destroy(r);if(void 0!==e.count)return e;{let t=e.filter(e=>void 0!==e);if(t.length)throw app.utils.apiError.getError("DELETE_CONTACT_LAST_RELATIONSHIP",{contactIDs:t.join(", ")});return n.destroy(r)}}).then(function(e){s(null,e)}).catch(s)},e.helpers.countPersonRelationships=function(e,t,r){const s=app.utils.remote.mergeFilters({where:{"persons.id":e}},{where:t});app.models.relationship.count(s.where).then(function(e){r(null,e)}).catch(r)},e.helpers.filteredCountPersonRelationships=function(e,t,r){const s=app.utils.remote.mergeFilters({where:{"persons.id":e}},t);app.models.relationship.find(s).then(e=>{r(null,app.utils.remote.searchByRelationProperty.deepSearchByRelationProperty(e,s).length)}).catch(e=>{r(e)})},e.helpers.attachFilterPeopleWithoutRelation=function(e,t,r,s){const n=_.get(t,"args.filter.where.noRelationships",!1);if(_.unset(t,"args.filter.where.noRelationships"),!n)return s();_.unset(t,"args.filter.where.countRelations"),app.models.relationship.rawFind({outbreakId:t.instance.id,"persons.type":e},{projection:{persons:1}}).then(e=>[].concat(...e.map(e=>e.persons.map(e=>e.id)))).then(e=>(t.args.filter=app.utils.remote.mergeFilters({where:{id:{nin:e}}},t.args.filter),s())).catch(s)},e.helpers.validateOrGetAvailableCaseVisualId=function(t,r,s){return e.helpers.validateVisualIdUniqueness(t.id,r,s).then(()=>e.helpers.getAvailableVisualId(t,"caseIdMask",r,s))},e.helpers.validateOrGetAvailableContactVisualId=function(t,r,s){return e.helpers.validateVisualIdUniqueness(t.id,r,s).then(()=>e.helpers.getAvailableVisualId(t,"contactIdMask",r,s))},e.helpers.getAvailableVisualId=function(e,t,r,s){let n,a=app.utils.maskField.convertMaskToSearchRegExp(e[t],r);return a?(n=void 0!==s?app.models.person.findOne({where:{id:s,outbreakId:e.id,visualId:r}}).then(function(e){if(e)return e.visualId}):Promise.resolve()).then(function(s){return s||app.models.person.findOne({where:{outbreakId:e.id,visualId:{regexp:a}},deleted:!0,order:"visualId DESC"}).then(function(s){let n=0;return s&&(n=app.utils.maskField.extractValueFromMaskedField(e[t],s.visualId)),n++,app.utils.maskField.resolveMask(e[t],r,n)})}):Promise.reject(app.utils.apiError.getError("INVALID_VISUAL_ID_MASK",{visualIdTemplate:r,outbreakVisualIdMask:e[t]}))},e.helpers.getPersonQRResourceLink=function(e,t,r,s){s(null,app.utils.qrCode.createResourceLink(t,{outbreakId:e.id,[`${t}Id`]:r}))},e.helpers.getSystemAndOwnReferenceData=function(e,t){const r=app.utils.remote.mergeFilters({where:{or:[{outbreakId:{eq:null}},{outbreakId:e}]}},t);return app.models.referenceData.find(r)},e.helpers.filterPersonInformationBasedOnAccessPermissions=function(t,r){const s=_.get(r,"req.authData.user.permissionsList",[]);let n=_.get(r,"args.filter",{}),a={LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE:"case_list",LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_EVENT:"event_list",LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT:"contact_list"};-1!==s.indexOf(a[t])||app.models.role.permissionGroupMap&&app.models.role.permissionGroupMap[a[t]]&&-1!==s.indexOf(app.models.role.permissionGroupMap[a[t]].groupAllId)||(n=function e(t,r){if(t.fields=r,t.include){Array.isArray(t.include)||(t.include=[t.include]);let s=[];t.include.forEach(function(t){"string"==typeof t?s.push({relation:t,scope:{fields:r}}):(t.scope?(delete t.scope.where,t.scope&&(t.scope=e(t.scope,r))):t.scope={fields:r},s.push(t))}),t.include=s}return t}(n,[...e.noPersonReadPermissionFields,"relationships","persons","people"]),_.set(r,"args.filter",n))},e.helpers.countContactsByFollowUpFilter=function(e,t,r){t=t||{};let s=e.resultProperty,n={[s]:0,contactIDs:[],teams:[]};const a=app.utils.remote.searchByRelationProperty.convertIncludeQueryToFilterQuery(t);let o=a.contact;const i=a.case;let l=Promise.resolve();i&&(l=l.then(()=>app.models.case.rawFind({and:[i,{outbreakId:e.outbreakId,deleted:{$ne:!0}}]},{projection:{_id:1}})).then(t=>{if(_.isEmpty(t))return[];const r=t.map(e=>e.id);return app.models.relationship.rawFind({outbreakId:e.outbreakId,deleted:{$ne:!0},$or:[{"persons.0.source":!0,"persons.0.type":"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE","persons.1.type":"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT","persons.0.id":{$in:r}},{"persons.1.source":!0,"persons.1.type":"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE","persons.0.type":"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT","persons.1.id":{$in:r}}]},{projection:{persons:1}})}).then(e=>{let t={};(e||[]).forEach(e=>{const r=e.persons[0].target?e.persons[0].id:e.persons[1].id;t[r]=!0}),t=Object.keys(t),o=o?{and:[o,{id:{inq:t}}]}:{id:{inq:t}}})),(l=l.then(()=>{if(o)return app.models.contact.rawFind({and:[o,{outbreakId:e.outbreakId}]},{projection:{_id:1}}).then(function(e){return e.map(e=>e.id)})})).then(function(a){let o={where:{and:[{outbreakId:e.outbreakId},e.followUpFilter]}};return a&&o.where.and.push({personId:{inq:a}}),app.models.followUp.rawFind(app.utils.remote.mergeFilters(o,t||{}).where).then(function(e){n.contactIDs=[...new Set(e.map(e=>e.personId))],n[s]=n.contactIDs.length;let t={};e.forEach(function(e){t[e.teamId]?-1===t[e.teamId].contactIDs.indexOf(e.personId)&&t[e.teamId].contactIDs.push(e.personId):t[e.teamId]={id:e.teamId,contactIDs:[e.personId]}}),n.teams=_.values(t).map(e=>(e[s]=e.contactIDs.length,e)).filter(e=>e[s]),r(null,n)})}).catch(r)},e.helpers.buildOrCountNewChainsFromRegisteredContactsWhoBecameCases=function(e,t,r,s){const n={where:{outbreakId:e.id,wasContact:!0,classification:{nin:app.models.case.discardedCaseClassifications}},fields:["id","relationships","dateBecomeCase"],include:[{relation:"relationships",scope:{fields:["id","contactDate"],filterParent:!0}}]},a=_.get(t,"where.case");a&&(delete t.where.case,n.where={and:[n.where,a]}),app.models.case.rawFind(n.where,{projection:{dateBecomeCase:1}}).then(function(a){const o={};return a.forEach(function(e){o[e.id]=e,e.relationships=[]}),app.models.relationship.rawFind({outbreakId:e.id,"persons.id":{inq:Object.keys(o)}},{projection:{contactDate:1,persons:1}}).then(function(i){i.forEach(function(e){Array.isArray(e.persons)&&e.persons.forEach(function(t){o[t.id]&&o[t.id].relationships.push(e)})}),a=app.utils.remote.searchByRelationProperty.deepSearchByRelationProperty(a,n);const l=[];a.forEach(function(e){Array.isArray(e.relationships)&&e.relationships.forEach(function(t){app.utils.helpers.getDate(t.contactDate)>=app.utils.helpers.getDate(e.dateBecomeCase)&&l.push(t.id)})}),app.models.relationship.buildOrCountTransmissionChains(e.id,e.periodOfFollowup,app.utils.remote.mergeFilters({where:{id:{inq:l}}},t||{}),r,!1,s)})}).catch(s)},e.helpers.validateVisualIdUniqueness=function(e,t,r){return app.models.person.findOne({where:{outbreakId:e,visualId:t,id:{neq:r}},deleted:!0}).then(e=>{if(!e)return t;throw app.utils.apiError.getError("DUPLICATE_VISUAL_ID",{id:t})})},e.helpers.mergePersonModels=function(e,t,r){const s=["followUpHistory"],n=["dateRanges","classificationHistory"];let a="LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE"===r?["dateOfInfection","dateOfOnset","isDateOfOnsetApproximate","wasContact","dateBecomeCase","outcomeId","dateOfOutcome","safeBurial","dateOfBurial","classification","classificationHistory","riskLevel","riskReason","transferRefused","dateOfReporting","isDateOfReportingApproximate"]:["riskLevel","riskReason","wasCase","dateBecomeContact","followUpHistory"],o=e.__data,i=[];for(let e in a)o.hasOwnProperty(e)&&null!=o[e]||i.push(e);return i.forEach(e=>{for(let r=1;r<t.length;r++){let s=t[r].__data;if(s.hasOwnProperty(e)&&null!==s[e]){o[e]=s[e];break}}}),"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE"===r&&n.forEach(e=>{o[e]=o[e]||[],o[e]=o[e].concat(...t.filter(t=>t[e]).map(t=>t[e]))}),"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT"===r&&s.forEach(e=>{o[e]=o[e]||[],o[e]=o[e].concat(...t.filter(t=>t[e]).map(t=>t[e]))}),o.addresses=o.addresses||[],o.addresses=o.addresses.concat(...t.filter(e=>e.addresses).map(e=>e.addresses)),o.documents=o.documents||[],o.documents=o.documents.concat(...t.filter(e=>e.documents).map(e=>e.documents.filter(e=>-1===o.documents.findIndex(t=>t.type===e.type&&t.number===e.number)))),e},e.helpers.excludeInactiveQuestions=function(e){return function e(t){return t.filter(t=>!t.inactive&&(t.answers=t.answers||[],"LNG_REFERENCE_DATA_CATEGORY_QUESTION_ANSWER_TYPE_SINGLE_ANSWER"!==t.answerType&&"LNG_REFERENCE_DATA_CATEGORY_QUESTION_ANSWER_TYPE_MULTIPLE_ANSWERS"!==t.answerType||t.answers.forEach(t=>{t.additionalQuestions=t.additionalQuestions?e(t.additionalQuestions):[]}),!0))}(e)},e.helpers.parseTemplateQuestions=function(t,r,s=!0){let n=function(e){let t=r.getTranslation(e);return t||e},a=_.filter(t,e=>"LNG_REFERENCE_DATA_CATEGORY_QUESTION_ANSWER_TYPE_FILE_UPLOAD"!==e.answerType);return s&&(a=e.helpers.excludeInactiveQuestions(a)),function e(t){return t.map((t,r)=>{let s={order:++r,question:n(t.text),variable:t.variable,answerType:t.answerType,answers:t.answers,multiAnswer:t.multiAnswer,answersDisplay:t.answersDisplay};return"LNG_REFERENCE_DATA_CATEGORY_QUESTION_ANSWER_TYPE_SINGLE_ANSWER"!==t.answerType&&"LNG_REFERENCE_DATA_CATEGORY_QUESTION_ANSWER_TYPE_MULTIPLE_ANSWERS"!==t.answerType||(s.answers=t.answers.map(t=>(t.additionalQuestions&&t.additionalQuestions.length&&(s.answersDisplay="LNG_OUTBREAK_QUESTIONNAIRE_ANSWERS_DISPLAY_ORIENTATION_VERTICAL"),{label:n(t.label),value:t.value,additionalQuestions:e(t.additionalQuestions||[])}))),s})}(a)},e.helpers.getUsersPersonReadPermissions=function(t){let r=t.req.authData.user.permissionsList.filter(t=>-1!==e.personReadPermissions.indexOf(t));return r=[...new Set(r)]},e.helpers.limitPersonInformation=function(t,r){const s={LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT:"contact_list",LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE:"case_list",LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_EVENT:"event_list"};if(!(-1!==r.indexOf(s[t.type])||app.models.role.permissionGroupMap&&app.models.role.permissionGroupMap[s[t.type]]&&-1!==r.indexOf(app.models.role.permissionGroupMap[s[t.type]].groupAllId)))for(let r in t)-1===e.noPersonReadPermissionFields.indexOf(r)&&delete t[r]};const t=function(t,r,s){!s.multiAnswer&&Array.isArray(r)&&r.length&&r[0].date?r=r.find(e=>genericHelpers.getDate(e.date).format("YYYY-MM-DD")===s.multiAnswerDate):Array.isArray(r)&&r.length&&(r=r[0]),r=r?r.value:null,Array.isArray(s.answers)&&s.answers.length&&!Array.isArray(r)&&(r=[r]),Array.isArray(r)&&r.length?s.answers.forEach(n=>{-1!==r.indexOf(n.value)&&(n.selected=!0),n.additionalQuestions&&n.additionalQuestions.length&&(n.additionalQuestions=e.helpers.prepareQuestionsForPrint(t,n.additionalQuestions,s.multiAnswerDate))}):r instanceof Date||genericHelpers.isValidDate(r)?s.value=genericHelpers.getDateDisplayValue(r):s.value=r};e.helpers.prepareQuestionsForPrint=function(e,r,s){return r.forEach(r=>{let n=e[r.variable];n&&(r.multiAnswer?(r.multiAnswers=[],n.forEach(s=>{const n=_.cloneDeep(r);n.value=null,n.multiAnswerDate=genericHelpers.getDate(s.date).format("YYYY-MM-DD"),t(e,s,n),r.multiAnswers.push({date:n.multiAnswerDate,answers:n.answers,value:n.value})})):(s&&(r.multiAnswerDate=s),t(e,n,r)))}),r},e.prototype.findOrCountPeopleInCluster=function(e,t,r,s){app.models.cluster.findOne({where:{id:e,outbreakId:this.id}}).then(function(n){if(!n)return s(app.utils.apiError.getError("MODEL_NOT_FOUND",{model:app.models.cluster.modelName,id:e}));n.findOrCountPeople(t,r,s)})},e.observe("before save",function(e,t){templateParser.beforeHook(e,t)}),e.observe("after save",function(e,t){templateParser.afterHook(e,r=>{if(r&&t(r),e.isNewInstance&&_.get(e,"options.remotingContext.req.authData.userInstance")&&_.get(e,"instance.id")){const r=e.options.remotingContext.req.authData.userInstance,s=e.instance.id;!_.isEmpty(r.outbreakIds)&&r.outbreakIds.indexOf(s)<0?(r.outbreakIds.push(s),r.updateAttributes({outbreakIds:r.outbreakIds}).then(()=>{t()}).catch(t)):t()}else t()})}),e.observe("loaded",function(e,t){e.data.arcGisServers&&Array.isArray(e.data.arcGisServers)&&e.data.arcGisServers.length||(e.data.arcGisServers=app.models.systemSettings.getDefaultArcGisServers()),["caseInvestigationTemplate","contactFollowUpTemplate","labResultsTemplate"].forEach(function(t){templateParser.orderQuestions(e.data[t])}),t()}),e.helpers.resolvePersonVisualIdTemplate=function(t,r,s,n){return"string"==typeof r&&r.length?e.helpers.validateVisualIdUniqueness(t.id,r,n).then(()=>e.helpers.getAvailableVisualId(t,"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CASE"===s?"caseIdMask":"contactIdMask",r,n)):Promise.resolve()},e.helpers.printCaseInvestigation=function(t,r,s=1,n,a,o){const i=app.models;let l=t.caseInvestigationTemplate,p=t.labResultsTemplate,d="",E=tmp.dirSync({unsafeCleanup:!0}),_=E.name,c=a.remotingContext.req.authData.userInstance.languageId;app.models.language.getLanguageDictionary(c,function(a,c){if(a)return o(a);const u=function(e){const t={},r=i[e].sectionsFieldLabels;for(const s in r)t[s]={title:c.getTranslation(r[s].title),labels:r[s].labels.map(t=>{const r=c.getTranslation(t);let s="LNG_CASE_FIELD_LABEL_AGE",n="LNG_CASE_FIELD_LABEL_DOB";return"contact"===e&&(s="LNG_CONTACT_FIELD_LABEL_AGE",n="LNG_CONTACT_FIELD_LABEL_DOB"),t===s?{name:r,value:"_".repeat(6)+c.getTranslation("LNG_AGE_LABEL_YEARS")+"_".repeat(6)+c.getTranslation("LNG_AGE_LABEL_MONTHS")}:t===n?{name:r,value:"_".repeat(6)+c.getTranslation("LNG_DOB_LABEL_DAY")+"_".repeat(6)+c.getTranslation("LNG_DOB_LABEL_MONTH")+"_".repeat(6)+c.getTranslation("LNG_DOB_LABEL_YEAR")}:r})},"addresses"===s&&(t[s].additionalTitles=[c.getTranslation("LNG_REFERENCE_DATA_CATEGORY_ADDRESS_TYPE_USUAL_PLACE_OF_RESIDENCE"),c.getTranslation("LNG_REFERENCE_DATA_CATEGORY_ADDRESS_TYPE_OTHER")]),"addresses"!==s&&"documents"!==s||(t[s].copies=2);return t},A=u(i.case.modelName),T=u(i.contact.modelName);let h=Object.assign({},i.relationship.fieldLabelsMap),N=Object.assign({},i.labResult.fieldLabelsMap);delete N.personId,delete h.persons;let f=genericHelpers.translateFieldLabels(app,N,i.labResult.modelName,c),m=genericHelpers.translateFieldLabels(app,h,i.relationship.modelName,c),R=e.helpers.parseTemplateQuestions(l,c),L=e.helpers.parseTemplateQuestions(p,c),O=[];const I={fontSize:7,displayDashLines:!1,imageSize:{width:75,height:75},identifierPosition:{x:380,y:90},imagePosition:{x:495}},C=function(e){e.moveDown(7),e.x=e.x+30,app.utils.qrCode.addPersonQRCode(e,t.id,"case",n||d,I)};for(let e=0;e<s;e++)O.push(e=>{let t=r.createPdfDoc({fontSize:9,layout:"portrait",lineGap:0,wordSpacing:0,characterSpacing:0,paragraphGap:0});n||(d=uuid.v4());const s={titlePosition:{x:t.options.margin+20,y:60}};t.on("pageAdded",()=>{C(t)}),C(t),r.displaySections(t,A,c.getTranslation("LNG_PAGE_TITLE_CASE_DETAILS"),s),R&&R.length&&(t.addPage(),r.createQuestionnaire(t,R,!1,c.getTranslation("LNG_PAGE_TITLE_CASE_QUESTIONNAIRE"),s)),t.addPage(),r.displayResourceLabels(t,Object.keys(f),c.getTranslation("LNG_PAGE_TITLE_LAB_RESULTS_DETAILS"),s),L&&L.length&&(t.addPage(),r.createQuestionnaire(t,L,!1,c.getTranslation("LNG_PAGE_TITLE_LAB_RESULTS_QUESTIONNAIRE"),s)),t.addPage(),r.displaySections(t,T,c.getTranslation("LNG_PAGE_TITLE_CONTACT_DETAILS"),s),t.addPage(),r.displayResourceLabels(t,Object.keys(m),c.getTranslation("LNG_PAGE_TITLE_CONTACT_RELATIONSHIP"),s),t.addPage(),t.end(),genericHelpers.streamToBuffer(t,(t,r)=>{t?e(t):fs.writeFile(`${_}/${n?n.id:d}.pdf`,r,t=>{t?e(t):e(null,null)})})});async.series(O,e=>{if(e)o(e);else{let e=`caseInvestigationTemplates_${moment().format("YYYY-MM-DD_HH-mm-ss")}.zip`,t=`${_}/${e}`,r=new AdmZip;r.addLocalFolder(_),r.writeZip(t),fs.readFile(t,(t,r)=>{t?o(t):(E.removeCallback(),app.utils.remote.helpers.offerFileToDownload(r,"application/zip",e,o))})}})})},e.observe("before delete",function(t,r){e.findById(t.currentInstance.id).then(function(e){return e?app.models.User.count({activeOutbreakId:e.id}):0}).then(function(e){return e?r(app.utils.apiError.getError("DELETE_ACTIVE_OUTBREAK",{id:t.currentInstance.id},422)):r()}).catch(r)}),e.createPersonMultipleContacts=function(e,t,r,s,n){return new Promise(function(a,o){if(!s.length)return o(app.utils.apiError.getError("CONTACT_AND_RELATIONSHIP_REQUIRED"));let i=[],l=[],p=[];s.forEach(function(s,a){i.push(function(o){if(!s.contact||!s.relationship)return l.push({recordNo:a,error:app.utils.apiError.getError("CONTACT_AND_RELATIONSHIP_REQUIRED")}),o();let i={};s.contact.outbreakId=e.id,app.models.contact.create(s.contact,n).then(function(a){i.contact=a,s.relationship.persons=[{id:a.id,type:"LNG_REFERENCE_DATA_CATEGORY_PERSON_TYPE_CONTACT",target:!0}];let o=e.createCaseRelationship;return t===app.models.event.modelName&&(o=e.createEventRelationship),new Promise(function(t,a){o.call(e,r,s.relationship,n,function(e,r){e?a(e):t(r)})})}).then(function(e){i.relationship=e,p.push(Object.assign({recordNo:a},i)),o()}).catch(function(e){l.push({recordNo:a,error:e}),i.contact&&i.contact.destroy(n).then(function(){app.logger.debug("Contact successfully rolled back")}).catch(function(e){app.logger.debug(`Failed to rollback contact. Error: ${e}`)}),o()})})}),async.series(i,function(e){if(e)return o(e);l.length?o(app.utils.apiError.getError("MULTIPLE_CONTACTS_CREATION_PARTIAL_SUCCESS",{failed:l,success:p})):a(p)})})},e.modifyMultipleContacts=function(e){const t=app.utils.apiError.getError,r=app.models.contact;return new Promise((s,n)=>{const a=[],o=[],i=[];if(!e.length)return s(i);const l=[];e.forEach(e=>{e.id&&l.push(e.id)}),r.find({where:{id:{inq:l}}}).then(l=>{const p={};l.forEach(e=>{p[e.id]=e}),e.forEach((e,s)=>{a.push(n=>e.id?p[e.id]?void p[e.id].updateAttributes(e).then(e=>(i.push({recordNo:s,contact:e}),n())).catch(e=>(o.push({recordNo:s,error:e}),n())):(o.push({recordNo:s,error:t("MODEL_NOT_FOUND",{model:r.modelName,id:e.id})}),n()):(o.push({recordNo:s,error:t("CONTACT_ID_REQUIRED")}),n()))}),async.series(a,e=>e?n(e):o.length?n(t("MULTIPLE_CONTACTS_UPDATE_PARTIAL_SUCCESS",{failed:o,success:i})):s(i))})})}};
"use strict";const Jimp=require("jimp"),uuid=require("uuid"),app=require("../../server/server"),helpers=require("../../components/helpers");module.exports=function(e){e.saveOnDisk=function(e){return new Promise(function(r,t){Jimp.read(e).then(function(e){let n=[50,Jimp.AUTO];return e.bitmap.width<e.bitmap.height&&(n=n.reverse()),e.resize(...n).getBuffer(Jimp.AUTO,function(n,o){return n?t(n):app.models.storage.save(app.models.storage.containers.icons,`${uuid.v4()}.${e.getExtension()}`,o).then(r)})}).catch(t)})},e.readFromDisk=function(e){return app.models.storage.read(e)},e.removeFromDisk=function(e){return app.models.storage.remove(e)},e.observe("before delete",function(r,t){let n=r.currentInstance.id;app.models.referenceData.count({iconId:n}).then(function(o){return o?t(app.utils.apiError.getError("MODEL_IN_USE",{model:e.name,id:n})):e.findById(n).then(function(e){e&&helpers.setOriginalValueInContextOptions(r,"deletedIcon",e),t()})}).catch(t)}),e.observe("after delete",function(r,t){let n=helpers.getOriginalValueFromContextOptions(r,"deletedIcon");n&&e.removeFromDisk(n.path).catch(function(e){r.options.remotingContext.req.logger.error(e)}),t()})};
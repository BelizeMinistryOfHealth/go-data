"use strict";const Timer=require("../../components/Timer"),_=require("lodash"),config=require("../config");function logResponse(e,s,n){if(!s.loggedResponse){s.loggedResponse=!0;let t=e?` Body: ${e.toString()}`:"";if(_.get(config,"logging.requestResponse.trim",!1)){const e=_.get(config,"logging.requestResponse.maxLength");t.length>e&&(t=t.substring(0,e)+"...(trimmed)")}s.logger.debug(`Sent Response: ${n.statusCode} ${s.method} ${s.originalUrl} Headers: ${JSON.stringify(n._headers)}${t}. Response time: ${s.timer.getElapsedMilliseconds()} msec`)}}module.exports=function(e){e.remotes().phases.addAfter("transaction-init","request-response-logger").use(function(e,s){const n=e.req,t=e.res;n.timer=new Timer,n.timer.start();let o=JSON.stringify(n.body);if(_.get(config,"logging.requestResponse.trim",!1)){const e=_.get(config,"logging.requestResponse.maxLength");o.length>e&&(o=o.substring(0,e)+"...(trimmed)")}n.logger.debug(`Received Request: ${n.method} ${n.originalUrl} Headers: ${JSON.stringify(n.headers)} Body: ${o}`),t.setHeader("Transaction-Id",n.transactionId),t.setHeader("Access-Control-Expose-Headers","Transaction-Id");const i=t.send;t.send=function(e){logResponse(e,n,t),i.apply(this,arguments)};const r=t.end;t.end=function(e){logResponse(e,n,t),r.apply(this,arguments)},s()})};
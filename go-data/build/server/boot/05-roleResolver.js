"use strict";const _=require("lodash");module.exports=function(e){const t=e.models.role;function r(e,t){t.remotingContext.req.accessErrors||(t.remotingContext.req.accessErrors=[]),Array.isArray(e)?t.remotingContext.req.accessErrors=t.remotingContext.req.accessErrors.concat(e):t.remotingContext.req.accessErrors.push(e)}t.availablePermissionsKeys.forEach(function(e){t.registerResolver(e,function(e,o,n){!function(e,r,o){let n=r.remotingContext.req.authData,i=!1;n&&n.user&&n.user.permissionsList&&((i=-1!==n.user.permissionsList.indexOf(e))||t.permissionGroupMap&&t.permissionGroupMap[e]&&(i=-1!==n.user.permissionsList.indexOf(t.permissionGroupMap[e].groupAllId))),i||function(e,t){t.remotingContext.req.missingPermissions||(t.remotingContext.req.missingPermissions=[]),t.remotingContext.req.missingPermissions.push(e)}(e,r),o(null,i)}(e,o,function(e,t){return e||!t?n(e,t):function(e,t,o){let n=t.remotingContext.req.authData.user,i=[],s=new RegExp("^\\/api\\/outbreaks\\/([^\\/?]+)(\\/[^\\/?]+)?"),a=t.remotingContext.req.originalUrl.match(s);return a&&a[1]&&!["count","export","import-importable-file-using-map"].includes(a[1])&&(n.outbreakIds&&Array.isArray(n.outbreakIds)&&n.outbreakIds.length&&-1===n.outbreakIds.indexOf(a[1])&&i.push("access denied to the given outbreak; the outbreak is not set as one of the user's accessible outbreaks"),!_.get(t,"remotingContext.method.http.ignoreActiveOutbreak")&&a[2]&&"/restore"!==a[2]&&"GET"!==t.remotingContext.req.method&&a[1]!==n.activeOutbreakId&&i.push("access to POST/PUT/DELETE actions on outbreak related data is granted only for the active outbreak")),i.length?(r(i,t),o(null,!1)):o(null,!0)}(0,o,n)})})}),t.hasOwnProperty("clientApplicationPermission")&&t.registerResolver(t.clientApplicationPermission,function(t,o,n){let i=o.remotingContext.req.headers,s=_.get(o,"remotingContext.req.authData.client",null),a=_.get(s,"credentials",{}),u=_.get(o,"remotingContext.req.authData.credentials",null);return i.authorization?2!==i.authorization.split(" ").length?(e.logger.debug('Authorization header format is "Authorization: Basic [token]"'),n(null,!1)):s&&u&&a.clientSecret===u.clientSecret?s.active?n(null,!0):(r("Client is not active",o),n(null,!1)):(function(e,t){t.remotingContext.req.authorizationErrors||(t.remotingContext.req.authorizationErrors=[]),t.remotingContext.req.authorizationErrors.push(e)}("Invalid credentials",o),n(null,!1)):(e.logger.debug("No Authorization header found"),n(null,!1))})};
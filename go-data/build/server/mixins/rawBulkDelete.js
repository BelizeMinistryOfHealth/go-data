"use strict";const _=require("lodash"),App=require("../server"),Timer=require("../../components/Timer"),Uuid=require("uuid");module.exports=function(e){let o=_.get(e,"definition.settings.mongodb.collection");o||(o=e.modelName);const t=_.get(e,"definition.settings.scope.where");e.rawBulkDelete=function(e){const n={$set:{deleted:!0,deletedAt:new Date}},r=Uuid.v4(),l=new Timer;return l.start(),t&&(e={$and:[t,e]}),e=App.utils.remote.convertLoopbackFilterToMongo({$and:[{$or:[{deleted:!1},{deleted:{$eq:null}}]},e]}),App.logger.debug(`[QueryId: ${r}] Performing MongoDB operation on collection '${o}': soft delete ${JSON.stringify(e)}`),App.dataSources.mongoDb.connector.collection(o).updateMany(e,n).then(e=>(App.logger.debug(`[QueryId: ${r}] MongoDB bulk delete completed after ${l.getElapsedMilliseconds()} msec`),e))},e.rawBulkHardDelete=function(e){const n=Uuid.v4(),r=new Timer;return r.start(),t&&(e={$and:[t,e]}),e=App.utils.remote.convertLoopbackFilterToMongo(e),App.logger.debug(`[QueryId: ${n}] Performing MongoDB operation on collection '${o}': hard delete ${JSON.stringify(e)}`),App.dataSources.mongoDb.connector.collection(o).deleteMany(e).then(e=>(App.logger.debug(`[QueryId: ${n}] MongoDB bulk delete completed after ${r.getElapsedMilliseconds()} msec`),e))}};
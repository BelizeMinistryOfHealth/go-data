"use strict";const app=require("../../server"),common=require("./_common"),Role=app.models.role,User=app.models.user,rewrite=!1,defaultAdmin={id:"sys_admin",firstName:"System",lastName:"Administrator",email:"admin@who.int",password:"admin",languageId:"english_us",passwordChange:!0,roleIds:["ROLE_SYSTEM_ADMINISTRATOR","ROLE_USER_MANAGER"]},rolesMap=require("./defaultRoles"),createRoles=[];let options={_init:!0};function initRolesCreation(){Object.keys(rolesMap).forEach(function(e){createRoles.push(Role.findOne({where:{$or:[{name:e},{_id:rolesMap[e].id}]}}).then(function(t){return t?rewrite?t.updateAttributes({name:rolesMap[e].newName?rolesMap[e].newName:t.name,description:rolesMap[e].description,permissionIds:rolesMap[e].permissionIds,migrateDate:rolesMap[e].migrateDate},options).then(function(){return"updated."}):"skipped. Role already exists.":Role.create(Object.assign({id:rolesMap[e].id,name:rolesMap[e].newName?rolesMap[e].newName:e,description:rolesMap[e].description,permissionIds:rolesMap[e].permissionIds,migrateDate:rolesMap[e].migrateDate},common.install.timestamps),options).then(function(){return"created."})}).then(function(t){console.log(`Role ${e} ${t}`)}))})}function run(e){initRolesCreation(),Promise.all(createRoles).then(function(){return User.findOne({where:{email:defaultAdmin.email}}).then(function(e){return e?rewrite?e.updateAttributes(defaultAdmin,options).then(function(){return"updated."}):"skipped. User already exists.":User.create(Object.assign(defaultAdmin,common.install.timestamps),options).then(function(){return"created."})}).then(function(t){console.log(`Default System Administrator user ${t}`),e()}).catch(e)})}module.exports=run;
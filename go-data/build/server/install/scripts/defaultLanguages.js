"use strict";const app=require("../../server"),fs=require("fs"),async=require("async"),common=require("./_common"),languageList=[];fs.readdirSync(`${__dirname}/../../config/languages`).forEach(function(n){languageList.push(require(`${__dirname}/../../config/languages/${n}`))});let options={_init:!0};const createLanguages=[];function run(n){async.series(createLanguages,function(e){if(e)return n(e);console.log("Languages installed"),n()})}languageList.forEach(function(n){createLanguages.push(function(e){app.models.language.findOne({where:{name:n.name}}).then(function(e){return e||app.models.language.create(Object.assign({id:n.id,name:n.name,readOnly:n.readOnly},common.install.timestamps),options)}).then(function(t){const a=[];return Object.keys(n.sections).forEach(function(e){Object.keys(n.sections[e]).forEach(function(t){a.push({token:t,translation:n.sections[e][t].translation,outbreakId:n.sections[e][t].outbreakId,modules:n.sections[e][t].modules,createdAt:common.install.timestamps.createdAt,updatedAt:common.install.timestamps.updatedAt})})}),t.updateLanguageTranslations(a,options,!1).then(function(n){e(null,n)})}).catch(e)})}),module.exports=run;
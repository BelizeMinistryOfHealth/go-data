"use strict";const fs=require("fs"),_=require("lodash"),app=require("../../server"),referenceData=app.models.referenceData,defaultReferenceData=require("./defaultReferenceData.json"),defaultOutbreakTemplateData=require("./defaultOutbreakTemplateData.json"),languageToken=app.models.languageToken;function run(e){const t={},a={};module.methodRelevantArgs.checkDefaultReferenceData&&_.each(defaultReferenceData,(e,t)=>{_.each(e,(e,n)=>{let r=referenceData.getTranslatableIdentifierForValue(t,n);a[r]=e})});const n={};module.methodRelevantArgs.checkDefaultOutbreakTemplateData&&(defaultOutbreakTemplateData.referenceData||[]).forEach(e=>{n[e.id]=e,n[e.description]=e}),referenceData.find().then(e=>{const a={};fs.readdirSync(`${__dirname}/../../config/languages`).forEach(e=>{const n=require(`${__dirname}/../../config/languages/${e}`),r=n.id;t[r]=n,a[r]={},_.each(t[r].sections,(e,t)=>{_.each(e,(e,n)=>{a[r][n]=t})})});const r={},o={};return e.forEach(e=>{o[e.id]=e.categoryId,e.description&&(o[e.description]=e.categoryId),r[e.id]=!0,e.description&&(r[e.description]=!0)}),languageToken.find({where:{token:{in:Object.keys(o)},languageId:{in:Object.keys(t)}}}).then(l=>{const d=["referenceData"];return l.forEach(e=>{delete r[e.token];const l=a[e.languageId][e.token]||a[e.languageId][o[e.token]];!l||t[e.languageId].sections[l][e.token]&&t[e.languageId].sections[l][e.token].translation===e.translation&&_.isEqual(t[e.languageId].sections[l][e.token].modules,d)||module.methodRelevantArgs.checkDefaultOutbreakTemplateData&&n[e.token]||(_.set(t,`[${e.languageId}].sections[${l}][${e.token}].translation`,e.translation),_.set(t,`[${e.languageId}].sections[${l}][${e.token}].modules`,d))}),_.isEmpty(r)||_.each(r,(e,r)=>{_.each(t,e=>{const l=a[e.id][r]||a[e.id][o[r]];!l||module.methodRelevantArgs.checkDefaultOutbreakTemplateData&&n[r]||(_.set(t,`[${e.id}].sections[${l}][${r}].translation`,""),_.set(t,`[${e.id}].sections[${l}][${r}].modules`,d))})}),{refDataItems:e}})}).then(r=>{const o=r.refDataItems;let l=!0;(o||[]).forEach(e=>{let t=!1;if((module.methodRelevantArgs.checkDefaultReferenceData&&a[e.id]&&e.colorCode===a[e.id].colorCode&&e.order===a[e.id].order||module.methodRelevantArgs.checkDefaultOutbreakTemplateData&&n[e.id])&&(t=!0),!t){let t;if(l=!1,a[e.id])t=a[e.id],console.log(`Differences detected for reference item '${e.id}'`);else{const a=e.id.substr(e.categoryId.length+1).trim();t={readOnly:!1},defaultReferenceData[e.categoryId][a]=t,console.log(`Missing reference item '${e.id}'`)}t.colorCode=e.colorCode,t.order=e.order}}),l&&console.log("There are no differences in ref data items..."),module.methodRelevantArgs.export?(fs.writeFile(module.methodRelevantArgs.export,JSON.stringify(defaultReferenceData,null,2),t=>{if(t)return e(t);console.log("Dumped reference data to file"),e()}),_.each(t,(t,a)=>{fs.writeFile(`${a}.json`,JSON.stringify(t,null,2),t=>{if(t)return e(t);console.log(`Dumped ${a} language data`),e()})})):(console.log("Finished determining reference data items"),e())}).catch(e)}module.exports=(e=>(module.methodRelevantArgs=e,run));
"use strict";const MongoDBHelper=require("../../../components/mongoDBHelper"),_=require("lodash"),uuid=require("uuid"),async=require("async"),datasources=require("../../datasources"),common=require("./_common"),mainLanguageId="english_us",recordsPerRequest=1e3;function getLanguages(e){return console.log("Retrieving all languages..."),e.mongoDBConnection.collection("language").find({_id:{$ne:mainLanguageId},deleted:{$ne:!0}},{_id:1,name:1}).toArray().then(n=>(console.log("Retrieved all languages"),{mongoDBConnection:e.mongoDBConnection,languages:n||[]}))}function getMainLanguageTokens(e,n){if(e.languages.length<1)return void console.log("There is no language to update...");console.log(`Retrieving '${mainLanguageId}' tokens...`);let o=0;return new Promise(function(t,a){const s=(e.languages||[]).map(e=>e._id),g=()=>{(()=>(console.log(`Retrieving tokens ${o+1} to ${o+recordsPerRequest}`),e.mongoDBConnection.collection("languageToken").find({languageId:mainLanguageId,deleted:{$ne:!0}},{_id:1,token:1,translation:1,outbreakId:1,modules:1}).skip(o).limit(recordsPerRequest).toArray()))().then(i=>{if(!i||i.length<1)return t();n({mongoDBConnection:e.mongoDBConnection,languagesIds:s,records:i||[]},o/recordsPerRequest+1,e=>{if(e)return a(e);o+=recordsPerRequest,g()})}).catch(a)};g()})}function determineMissingLanguageTokens(e,n,o){console.log(`Determining missing tokens ( page: ${n} )`);const t={};e.records.forEach(e=>{t[e.token]=e});const a=e.mongoDBConnection.collection("languageToken"),s=Object.keys(t);e.mongoDBConnection.collection("languageToken").find({languageId:{$in:e.languagesIds},token:{$in:s}},{_id:1,languageId:1,token:1,outbreakId:1,modules:1}).toArray().then(t=>{const s={};e.languagesIds.forEach(e=>{s[e]={}}),(t||[]).forEach(e=>{s[e.languageId][e.token]=e});const g=[];e.languagesIds.forEach(n=>{e.records.forEach(e=>{void 0===s[n][e.token]?g.push(function(e,n){return o=>{const t=e._id.startsWith("LNG_")?function(e,n){return e.length>900&&(e=`${e.substring(0,100)}_${_.snakeCase(uuid.v4().toUpperCase())}`),`${e}_${_.snakeCase(n).toUpperCase()}`}(e.token,n):uuid(),s=Object.assign({_id:t,languageId:n,token:e.token,tokenSortKey:e.token.substr(0,128),outbreakId:e.outbreakId,modules:e.modules,translation:e.translation},common.install.timestamps);a.insertOne(s).then(()=>{console.log(`Token '${s._id}' created`),o()}).catch(o)}}(e,n)):!e.outbreakId&&!e.modules||e.outbreakId===s[n][e.token].outbreakId&&_.isEqual(e.modules,s[n][e.token].modules)||g.push(function(e,n){return o=>{a.updateOne({_id:e},{$set:{outbreakId:n.outbreakId,modules:n.modules}}).then(()=>{console.log(`Token '${e}' updated`),o()}).catch(o)}}(s[n][e.token]._id,e))})}),g.length>0?async.parallelLimit(g,10,function(e){if(e)return o(e);console.log(`Determined missing tokens ( page: ${n} )`),o()}):(console.log("Nothing to change"),o())}).catch(o)}function run(e){MongoDBHelper.getMongoDBConnection({ignoreUndefined:datasources.mongoDb.ignoreUndefined}).then(e=>getLanguages({mongoDBConnection:e})).then(e=>getMainLanguageTokens(e,determineMissingLanguageTokens)).then(()=>{console.log("Finished populating languages with missing tokens"),e()}).catch(e)}module.exports=run;
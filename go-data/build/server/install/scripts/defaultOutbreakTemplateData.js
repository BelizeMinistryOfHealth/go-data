"use strict";const app=require("../../server"),languageToken=app.models.languageToken,outbreakTemplate=app.models.template,referenceData=app.models.referenceData,defaultOutbreakTemplateData=require("./defaultOutbreakTemplateData.json"),common=require("./_common"),async=require("async"),_=require("lodash");let options={_init:!0,_sync:!0};function run(e){const t=defaultOutbreakTemplateData||[];languageToken.find({where:{token:{inq:Object.keys(t.translations)}}}).then(e=>{const a=[];return(e||[]).forEach(e=>{const n=t.translations[e.token]?t.translations[e.token][e.languageId]:void 0;t.translations[e.token]&&delete t.translations[e.token][e.languageId],"string"!=typeof n?app.logger.debug(`Translation missing for ${e.token} => ${e.languageId}`):n===e.translation&&_.isEqual(t.translations[e.token].modules,e.modules)?app.logger.debug(`Translation is the same for ${e.token} => ${e.languageId}`):function(e,t,n){a.push(a=>{app.logger.debug(`Updating token ${e.token} => ${e.languageId} ...`),e.updateAttributes({translation:t,modules:n},options).then(()=>{app.logger.debug(`Updated token ${e.token} => ${e.languageId}`),a()}).catch(a)})}(e,n,t.translations[e.token].modules)}),Object.keys(t.translations||{}).forEach(e=>{Object.keys(t.translations[e]||{}).forEach(n=>{!function(e,t,n,o){a.push(a=>{app.logger.debug(`Creating token ${e} => ${t} ...`),languageToken.create(Object.assign({token:e,languageId:t,translation:n,modules:o},common.install.timestamps),options).then(()=>{app.logger.debug(`Created token ${e} => ${t}`),a()}).catch(a)})}(e,n,t.translations[e][n],t.translations[e].modules)})}),new Promise((e,t)=>{async.parallelLimit(a,10,function(a){if(a)return t(a);e()})})}).then(()=>new Promise((e,a)=>{if(_.isEmpty(t.referenceData))return e();const n={};(t.referenceData||[]).forEach(e=>{n[e.id]=e});const o=[],s={};referenceData.find({deleted:!0,where:{id:{inq:Object.keys(n)}}}).then(l=>{(l||[]).forEach(e=>{s[e.id]=!0;const t=n[e.id];e.value===t.value&&e.description===t.description&&e.colorCode===t.colorCode&&e.order===t.order?app.logger.debug(`No need to update reference data item ${e.id}`):function(e,t){o.push(a=>{app.logger.debug(`Updating reference data item ${e.id} ...`),e.updateAttributes({value:t.value,description:t.description,colorCode:t.colorCode,order:t.order,deleted:!1,deletedAt:null},options).then(()=>{app.logger.debug(`Updated reference data item ${e.id}`),a()}).catch(a)})}(e,t)}),(t.referenceData||[]).forEach(e=>{s[e.id]||function(e){o.push(t=>{app.logger.debug(`Creating reference data item ${e.id} ...`),referenceData.create(Object.assign({id:e.id,categoryId:e.categoryId,value:e.value,description:e.description,colorCode:e.colorCode,order:e.order},common.install.timestamps),options).then(()=>{app.logger.debug(`Created reference data item ${e.id}`),t()}).catch(t)})}(e)}),async.parallelLimit(o,10,function(t){if(t)return a(t);e()})}).catch(a)})).then(()=>new Promise((e,a)=>{if(_.isEmpty(t.outbreakTemplates))return e();const n={};(t.outbreakTemplates||[]).forEach(e=>{n[e.id]=e});const o=[],s={};outbreakTemplate.find({deleted:!0,where:{id:{inq:Object.keys(n)}}}).then(l=>{(l||[]).forEach(e=>{s[e.id]=!0;const t=n[e.id];!function(t,a){o.push(n=>{app.logger.debug(`Updating outbreak template ${e.id} ...`),t.updateAttributes({name:a.name,disease:a.disease,periodOfFollowup:a.periodOfFollowup,frequencyOfFollowUp:a.frequencyOfFollowUp,frequencyOfFollowUpPerDay:a.frequencyOfFollowUpPerDay,noDaysAmongContacts:a.noDaysAmongContacts,noDaysInChains:a.noDaysInChains,noDaysNotSeen:a.noDaysNotSeen,noLessContacts:a.noLessContacts,longPeriodsBetweenCaseOnset:a.longPeriodsBetweenCaseOnset,noDaysNewContacts:a.noDaysNewContacts,caseInvestigationTemplate:a.caseInvestigationTemplate,contactFollowUpTemplate:a.contactFollowUpTemplate,labResultsTemplate:a.labResultsTemplate,isContactLabResultsActive:!!a.isContactLabResultsActive,deleted:!1,deletedAt:null},options).then(()=>{app.logger.debug(`Updated outbreak template ${e.id}`),n()}).catch(n)})}(e,t)}),(t.outbreakTemplates||[]).forEach(e=>{s[e.id]||function(e){o.push(t=>{app.logger.debug(`Creating outbreak template ${e.id} ...`),outbreakTemplate.create(Object.assign({id:e.id,name:e.name,disease:e.disease,periodOfFollowup:e.periodOfFollowup,frequencyOfFollowUp:e.frequencyOfFollowUp,frequencyOfFollowUpPerDay:e.frequencyOfFollowUpPerDay,noDaysAmongContacts:e.noDaysAmongContacts,noDaysInChains:e.noDaysInChains,noDaysNotSeen:e.noDaysNotSeen,noLessContacts:e.noLessContacts,longPeriodsBetweenCaseOnset:e.longPeriodsBetweenCaseOnset,noDaysNewContacts:e.noDaysNewContacts,caseInvestigationTemplate:e.caseInvestigationTemplate,contactFollowUpTemplate:e.contactFollowUpTemplate,labResultsTemplate:e.labResultsTemplate,isContactLabResultsActive:!!e.isContactLabResultsActive},common.install.timestamps),options).then(()=>{app.logger.debug(`Created outbreak template ${e.id}`),t()}).catch(t)})}(e)}),async.parallelLimit(o,10,function(t){if(t)return a(t);e()})}).catch(a)})).then(()=>{console.log("Default Outbreak Template Data Installed"),e()}).catch(e)}module.exports=run;
"use strict";const app=require("../../server"),languageToken=app.models.languageToken,helpCategory=app.models.helpCategory,helpItem=app.models.helpItem,defaultHelpData=require("./defaultHelpData.json"),common=require("./_common"),async=require("async"),_=require("lodash");let options={_init:!0,_sync:!0};function run(e){const t=defaultHelpData||[];languageToken.find({where:{token:{inq:Object.keys(t.translations)}}}).then(e=>{const n=[];return(e||[]).forEach(e=>{const o=t.translations[e.token]?t.translations[e.token][e.languageId]:void 0;t.translations[e.token]&&delete t.translations[e.token][e.languageId],"string"!=typeof o?app.logger.debug(`Translation missing for ${e.token} => ${e.languageId}`):o===e.translation&&_.isEqual(t.translations[e.token].modules,e.modules)?app.logger.debug(`Translation is the same for ${e.token} => ${e.languageId}`):function(e,t,o){n.push(n=>{app.logger.debug(`Updating token ${e.token} => ${e.languageId} ...`),e.updateAttributes({translation:t,modules:o},options).then(()=>{app.logger.debug(`Updated token ${e.token} => ${e.languageId}`),n()}).catch(n)})}(e,o,t.translations[e.token].modules)}),Object.keys(t.translations||{}).forEach(e=>{Object.keys(t.translations[e]||{}).forEach(o=>{!function(e,t,o,a){n.push(n=>{app.logger.debug(`Creating token ${e} => ${t} ...`),languageToken.create(Object.assign({token:e,languageId:t,translation:o,modules:a},common.install.timestamps),options).then(()=>{app.logger.debug(`Created token ${e} => ${t}`),n()}).catch(n)})}(e,o,t.translations[e][o],t.translations[e].modules)})}),new Promise((e,t)=>{async.parallelLimit(n,10,function(n){if(n)return t(n);e()})})}).then(()=>new Promise((e,n)=>{const o={};(t.helpCategories||[]).forEach(e=>{o[e.id]=e});const a=[],r=Object.keys(o),i={};helpCategory.find({deleted:!0,where:{id:{inq:r}}}).then(r=>{(r||[]).forEach(e=>{i[e.id]=!0;const t=o[e.id];e.name===t.name&&e.order===t.order&&e.description===t.description?app.logger.debug(`No need to update category ${e.id}`):function(e,t){a.push(n=>{app.logger.debug(`Updating category ${e.id} ...`),e.updateAttributes({name:t.name,order:t.order,description:t.description,deleted:!1,deletedAt:null},options).then(()=>{app.logger.debug(`Updated category ${e.id}`),n()}).catch(n)})}(e,t)}),(t.helpCategories||[]).forEach(e=>{i[e.id]||function(e){a.push(t=>{app.logger.debug(`Creating category ${e.id} ...`),helpCategory.create(Object.assign({id:e.id,name:e.name,order:e.order,description:e.description},common.install.timestamps),options).then(()=>{app.logger.debug(`Created category ${e.id}`),t()}).catch(t)})}(e)}),async.parallelLimit(a,10,function(t){if(t)return n(t);e()})}).catch(n)})).then(()=>new Promise((e,n)=>{const o={};(t.helpCategories||[]).forEach(e=>{(e.items||[]).forEach(t=>{t.categoryId=e.id,o[t.id]=t})});const a=[],r=Object.keys(o),i={};helpItem.find({deleted:!0,where:{id:{inq:r}}}).then(t=>{(t||[]).forEach(e=>{i[e.id]=!0;const t=o[e.id];e.title===t.title&&e.content===t.content&&e.comment===t.comment&&e.approved?app.logger.debug(`No need to update help item ${e.id}`):function(e,t){a.push(n=>{app.logger.debug(`Updating help item ${e.id} ...`),e.updateAttributes({title:t.title,content:t.content,comment:t.comment,categoryId:t.categoryId,order:t.order,approved:!0,deleted:!1,deletedAt:null},options).then(()=>{app.logger.debug(`Updated help item ${e.id}`),n()}).catch(n)})}(e,t)}),Object.values(o).forEach(e=>{i[e.id]||function(e){a.push(t=>{app.logger.debug(`Creating help item ${e.id} ...`),helpItem.create(Object.assign({id:e.id,title:e.title,content:e.content,comment:e.comment,categoryId:e.categoryId,order:e.order,approved:!0},common.install.timestamps),options).then(()=>{app.logger.debug(`Created help item ${e.id}`),t()}).catch(t)})}(e)}),async.parallelLimit(a,10,function(t){if(t)return n(t);e()})}).catch(n)})).then(()=>{console.log("Default Help Data Installed"),e()}).catch(e)}module.exports=run;
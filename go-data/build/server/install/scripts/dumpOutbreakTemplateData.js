"use strict";const app=require("../../server"),languageToken=app.models.languageToken,outbreakTemplate=app.models.template,referenceData=app.models.referenceData,fs=require("fs"),_=require("lodash"),defaultReferenceData=require("./defaultReferenceData.json");function run(e){const a={};_.each(defaultReferenceData,(e,t)=>{_.each(e,(e,o)=>{let n=referenceData.getTranslatableIdentifierForValue(t,o);a[n]=e})}),fs.readdir("./server/config/languages",(t,o)=>{if(t)return e(t);const n=[];(o||[]).forEach(e=>{const a=require(`../../../server/config/languages/${e}`);n.push(a.id)}),outbreakTemplate.find({order:["name asc"]}).then(e=>{const t=["template"],o=[],n={},s={translations:{},referenceData:[],outbreakTemplates:[]};return(e||[]).forEach(e=>{s.outbreakTemplates.push({id:e.id,name:e.name,disease:e.disease,periodOfFollowup:e.periodOfFollowup,frequencyOfFollowUp:e.frequencyOfFollowUp,frequencyOfFollowUpPerDay:e.frequencyOfFollowUpPerDay,noDaysAmongContacts:e.noDaysAmongContacts,noDaysInChains:e.noDaysInChains,noDaysNotSeen:e.noDaysNotSeen,noLessContacts:e.noLessContacts,longPeriodsBetweenCaseOnset:e.longPeriodsBetweenCaseOnset,noDaysNewContacts:e.noDaysNewContacts,caseInvestigationTemplate:e.caseInvestigationTemplate,contactFollowUpTemplate:e.contactFollowUpTemplate,labResultsTemplate:e.labResultsTemplate,isContactLabResultsActive:e.isContactLabResultsActive}),e.disease&&!a[e.disease]&&(n[e.disease]=!0);const r=e=>{(e||[]).forEach(e=>{o.push({token:e.text,modules:t}),e.category&&!a[e.category]&&(n[e.category]=!0),(e.answers||[]).forEach(e=>{o.push({token:e.label,modules:t}),e.additionalQuestions&&r(e.additionalQuestions)})})};r(e.caseInvestigationTemplate),r(e.contactFollowUpTemplate),r(e.labResultsTemplate)}),Promise.resolve({exportData:s,tokensToTranslate:o,referenceDataToGet:n})}).then(e=>{const a=["referenceData"],t=e.exportData,o=e.referenceDataToGet,n=e.tokensToTranslate;return new Promise((s,r)=>{_.isEmpty(o)?s(e):referenceData.find({where:{id:{inq:Object.keys(o)}}}).then(o=>{(o||[]).forEach(e=>{t.referenceData.push({id:e.id,categoryId:e.categoryId,value:e.value,description:e.description,colorCode:e.colorCode,order:e.order}),n.push({token:e.value,modules:a},{token:e.description,modules:a})}),s(e)}).catch(r)})}).then(e=>{const a=e.exportData,t=e.tokensToTranslate;return new Promise((o,s)=>{languageToken.find({where:{token:{inq:t.map(e=>e.token)},languageId:{in:n}}}).then(n=>{const s={};t.forEach(e=>{s[e.token]=e}),(n||[]).forEach(e=>{a.translations[e.token]||(a.translations[e.token]={}),a.translations[e.token][e.languageId]=e.translation,a.translations[e.token].modules=s[e.token].modules}),o(e)}).catch(s)})}).then(a=>{const t=a.exportData;fs.writeFile(module.resolvedPath,JSON.stringify(t,null,2),a=>{if(a)return e(a);console.log("Dumped Outbreak Template Data"),e()})}).catch(e)})}module.exports=(e=>(module.resolvedPath=e,run));
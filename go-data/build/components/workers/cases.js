"use strict";const _=require("lodash"),helpers=require("../helpers");function countCategoryOverTime(e,t,o,i,r,n,c,s){return e.forEach(function(e){const a=helpers.getPeriodIntervalForDate(t,o,_.get(e,r)),u=`${a[0]} - ${a[1]}`;i[u]||(i[u]={start:a[0],end:a[1],[n]:Object.assign({},s),total:0}),i[u][n][e[c]]||(i[u][n][e[c]]=0),i[u][n][e[c]]++,i[u].total++}),i}const worker={countStratifiedByClassificationOverTime:function(e,t,o,i,r){return countCategoryOverTime(e,t,o,i,"dateOfOnset","classification","classification",r)},countStratifiedByOutcomeOverTime:function(e,t,o,i,r){return countCategoryOverTime(e,t,o,i,"dateOfOutcome","outcome","outcomeId",r)},countStratifiedByClassificationOverReportingTime:function(e,t,o,i,r){return countCategoryOverTime(e,t,o,i,"dateOfReporting","classification","classification",r)}};process.on("message",function(e){let t=worker[e.fn](...e.args);process.send([null,t])});
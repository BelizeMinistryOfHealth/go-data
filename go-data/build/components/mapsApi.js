"use strict";const querystring=require("querystring"),app=require("../server/server"),appConfig=require("../server/config.json"),request=require("request"),_=require("lodash");let token=null;const getGeoLocation=function(e,r){let t=function(){return request.get(`${appConfig.mapsApi.geocodeServerUrl}/findAddressCandidates?SingleLine=${e}&forStorage=false&f=json&token=${token}`,(e,n,o)=>{if(e)return app.logger.warn(`Failed to generate geocode. ${e}`),r(e);if(o){if("string"==typeof o)try{o=JSON.parse(o)}catch(e){return app.logger.warn(`Failed to parse response. ${e}`),r(e)}if(o.error)return 498===o.error.code?generateAccessToken(e=>e?r(e):token?t():r("Invalid external API credentials")):r();let e=_.maxBy(o.candidates,e=>e.score);return r(null,e?e.location:null)}})};t()},generateAccessToken=function(e){e=e||function(){};let r=appConfig.mapsApi,t=querystring.stringify({client_id:r.clientId,client_secret:r.clientSecret,expiration:r.tokenExpirationInMinutes,grant_type:"client_credentials",f:"json"});return request.get(`${r.tokenUrl}?${t}`,(r,t,n)=>{if(r)return app.logger.warn("Failed to generate access token for maps API"),e(r);if(n){if("string"==typeof n)try{n=JSON.parse(n)}catch(r){return app.logger.warn(`Failed to parse response. ${r}`),e(r)}if(n.error)return app.logger.warn(`Failed to generate access token for maps API. ${n}`),e();token=n.access_token}return e()})},initClient=function(){generateAccessToken()};module.exports={getGeoLocation:getGeoLocation,initClient:initClient};
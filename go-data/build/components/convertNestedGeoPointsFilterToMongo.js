"use strict";const _=require("lodash");function convert(e,n,t,a,i,s){const r=t?n:_.cloneDeep(n);return _.isEmpty(e.nestedGeoPoints)?r:(a||(a=[],e.nestedGeoPoints.forEach(e=>{a.push(e),e.indexOf("[]")>-1&&a.push(e.replace(/\[]/g,""))})),(_.isObject(r)||_.isArray(r))&&_.each(r,(n,t)=>{if("string"==typeof t&&a.includes(t)){if(_.isObject(n)&&n.near){const e=i?s?"geoNear":"$geoNear":s?"near":"$near";n.near&&void 0!==n.near.lat&&void 0!==n.near.lng?n[e]={$geometry:{type:"Point",coordinates:["string"==typeof n.near.lng?parseFloat(n.near.lng):n.near.lng,"string"==typeof n.near.lat?parseFloat(n.near.lat):n.near.lat]}}:n[e]=n.near,n[e]&&(void 0!==n.maxDistance&&(n[e].$maxDistance="string"==typeof n.maxDistance?parseFloat(n.maxDistance):n.maxDistance),void 0!==n.minDistance&&(n[e].$minDistance="string"==typeof n.minDistance?parseFloat(n.minDistance):n.minDistance)),delete n.near,delete n.maxDistance,delete n.minDistance}}else r[t]=convert(e,n,!0,a,i,s)}),r)}module.exports=convert;